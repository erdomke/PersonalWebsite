<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eric Domke</title>
    <link>http://www.ericdomke.com/</link>
    <description>Recent content on Eric Domke</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Apr 2016 17:48:34 -0400</lastBuildDate>
    <atom:link href="http://www.ericdomke.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Surface Pro 4 Review</title>
      <link>http://www.ericdomke.com/article/surface-pro-4-review/</link>
      <pubDate>Tue, 05 Apr 2016 17:48:34 -0400</pubDate>
      
      <guid>http://www.ericdomke.com/article/surface-pro-4-review/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;: The device&amp;rsquo;s small size, sufficient battery life, and tablet capabilities (touch
screen, stylus, camera, etc.) make this device fun to use during normal operation&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;: DPI scaling issues, crashes when trying to wake the device from sleep, and inconvenient
keyboard layout can lead to frustrations&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Overall&lt;/strong&gt;: While the device is full-featured and fun to use, I don&amp;rsquo;t believe it is ready yet for
a casual user who wants something that &amp;ldquo;just works&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Context&lt;/strong&gt;: I am a software developer who is frequently switching between dozens of applications
including resource intensive applications such as Visual Studio.  I use the Surface Pro 4 configured
with an i7 processor, 16 Gb of RAM, and a 256 Gb SSD.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.ericdomke.com/images/SurfacePro4.jpg&#34; alt=&#34;Surface Pro 4 Detail&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;form-factor-and-peripherals:ac27b4f157090c22ea90524d3bce2b4f&#34;&gt;Form Factor and Peripherals&lt;/h2&gt;

&lt;p&gt;While the small screen size can make it a touch challenging to use densely laid out applications
(such as Visual Studio), the ease of portability more than makes up for this.  In fact, the small
size allows me to use the device reasonably comfortably from a workout bike and treadmill; something
I would never have considered with my old, mammoth laptop.  The touch screen is also surprisingly
useful.  I never thought I would be a &amp;ldquo;poke-the-screen&amp;rdquo; person.  However, there are times that I
find this much more convenient then trying to identify where the cursor is and use the mouse pad.&lt;/p&gt;

&lt;h3 id=&#34;the-pen:ac27b4f157090c22ea90524d3bce2b4f&#34;&gt;The Pen&lt;/h3&gt;

&lt;p&gt;The included surface pro pen is useful for jotting down quick notes and drawings in a place where
you are unlikely to lose them or throw them away.  The OneNote app is particularly useful for this
and is well integrated with the pen.  A single click of the pen&amp;rsquo;s button launches the app to a new
page ready for note-taking.  The pen is a bit more cumbersome to use with non-microsoft apps (such
as Inkscape) where it functions as a simple mouse.  Unfortunately, there is not an official way to
configure the pen for these applications so that the &amp;ldquo;select&amp;rdquo; button and eraser could perform
the appropriate function for these applications.  I was surprised however to discover that I could
hack the pen into useful remote control for PowerPoint using the instructions posted by a
&lt;a href=&#34;http://stambalab.com/controlling-powerpoint-presentations-on-surface-pro-3-using-only-the-pen/&#34;&gt;Ivan Stambolic&lt;/a&gt;.
While a dedicated device would offer more features, it is nice to be able to use the device I
already have.&lt;/p&gt;

&lt;h3 id=&#34;the-keyboard:ac27b4f157090c22ea90524d3bce2b4f&#34;&gt;The Keyboard&lt;/h3&gt;

&lt;p&gt;While other reviews have complained about the rigidity of previous incarnations of the Surface Pro
Type Cover, the cover that comes with the Surface Pro 4 is quite usable, even on my lap.  My one
complaint with the cover is the keyboard layout.  As a software developer, I frequently need access
to both the Home/End keys (for editing text) as well as the Function keys (for running and debugging
code).  Having to constantly switch between these modes via the &lt;code&gt;Fn&lt;/code&gt; key can prove annoying.  Also,
the choice to truncate the up and down arrow keys is regrettable as it makes it harder to use these
keys whether for scrolling through a web page, playing a game, or for another purpose.  On the plus
side, the backlighting does make the keyboard easier to use in the dark.&lt;/p&gt;

&lt;h3 id=&#34;docking-to-external-monitors:ac27b4f157090c22ea90524d3bce2b4f&#34;&gt;Docking to External Monitors&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://www.ericdomke.com/images/SurfacePro4_DpiScalingIssues01.png&#34; alt=&#34;Surface Pro DPI Issues&#34; /&gt;&lt;/p&gt;

&lt;p&gt;One of my biggest frustrations with the Surface early on was getting my docking station set up.  In
particular, I was having problems getting my surface to display on the two monitors on my desk via
the docking station.  The original mini display port to HDMI connectors I was using functioned
without issues when connecting my surface to the monitor directly, but would not function via the
docking station.  I ended up finding that the StarTech #MDP2DVIS would work via my docking station
even though the previous StarTech model did not.&lt;/p&gt;

&lt;p&gt;A continuing frustration, though, has been DPI inconsistencies.  The Surface is a high resolution
device with a native DPI of 192.  My monitors are standard resolution with a DPI of 96.  Because
of this mismatch, there are times where Windows does not know what DPI to render various
applications at.  (The screenshot above is a single screenshot of three applications side by side.)
As a result, parts (generally not all) of certain applications will appear at half or double their
correct size.  This can make these applications difficult to use.  I have still not been able to
concretely identify what causes Windows to render applications one way versus the other.  However,
it sees more likely that Windows will render applications correctly on my 96 DPI monitors if I boot
up the device while it is docked.&lt;/p&gt;

&lt;h2 id=&#34;battery-life:ac27b4f157090c22ea90524d3bce2b4f&#34;&gt;Battery Life&lt;/h2&gt;

&lt;p&gt;Much like &lt;a href=&#34;http://www.techradar.com/reviews/pc-mac/tablets/microsoft-surface-pro-4-1290285/review/3&#34;&gt;observed by others&lt;/a&gt;
the battery life is no where close to the advertised specification of 9 hours of video playback.
Over the last few months of usage, I have gotten much closer to 4 hours on a full charge.  While this
discrepancy is discouraging, I do not recall if I have ever had a standard laptop which supplied
much more than 2 hours of battery life.  As a result, I still find the Surface very useful in this
regards.&lt;/p&gt;

&lt;h2 id=&#34;windows-10:ac27b4f157090c22ea90524d3bce2b4f&#34;&gt;Windows 10&lt;/h2&gt;

&lt;p&gt;Having skipped Windows 8 in favor of going straight to Windows 10 from Windows 7, I find the
transition to be fairly painless.  In all of the important ways, the operating system still feels
like Windows 7, and all of the tablet apps and features fit seemlessly into the desktop experience.
The solid state hard drive and ample RAM also make both the operating system and its applications
very quick to load.&lt;/p&gt;

&lt;h2 id=&#34;system-stability:ac27b4f157090c22ea90524d3bce2b4f&#34;&gt;System Stability&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://www.ericdomke.com/images/Windows10Bsod.png&#34; alt=&#34;Windows 10 Blue Screen of Death&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;small&gt;From &lt;a href=&#34;http://www.thewindowsclub.com/blue-screen-death-windows-10&#34;&gt;The Windows Club&lt;/a&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One of my biggest complaints with my Surface Pro 4 (other than DPI issues) is with system stability.
The device really feels like a step back in terms of reliability.  In the last few months, I have
already had the pleasure of becoming acquainted with the new &amp;ldquo;blue screen of death&amp;rdquo; on several
occassions.  In addition, it is hit or miss whether or not I will be able to get the device to wake
up from sleep.  While I have learned to be somewhat patient with the device (I have gotten it to
wake up from sleep after say 20-30 seconds despite no visual indication on the monitor), there are
still times where I have not been able to wake the device.  The tricks I have discovered are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;em&gt;Disconnect the device from the docking station.&lt;/em&gt;  Sometimes, the issue is that the Surface has
stopped communicating with the monitors via the dock.  Disconnecting offers you the
opportunity to get into the device and save your work before rebooting so that the external
monitors function again.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The two button reset.&lt;/em&gt;  I have had mixed success with simply holding down on the power button to
trigger a reboot.  However, holding down on the power and volume up buttons simultaneously
for approximately 20 to 30 seconds does seem to be reliable.  Simply select &lt;code&gt;Exit&lt;/code&gt; &amp;gt;
&lt;code&gt;Restart Now&lt;/code&gt; at the BIOS screen, and the device should start up again normally.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>about</title>
      <link>http://www.ericdomke.com/about/</link>
      <pubDate>Thu, 31 Mar 2016 22:17:11 -0400</pubDate>
      
      <guid>http://www.ericdomke.com/about/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://plus.google.com/+EricDomke&#34;&gt;Eric Domke&lt;/a&gt; architects, develops, and maintains
software for a living so that he can eat new foods, travel to new destinations,
cycle along new paths, and photograph new sights&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Troubleshooting Server Crashes in ASP.Net</title>
      <link>http://www.ericdomke.com/article/troubleshooting-server-crashes-in-asp.net/</link>
      <pubDate>Mon, 28 Mar 2016 09:53:19 -0400</pubDate>
      
      <guid>http://www.ericdomke.com/article/troubleshooting-server-crashes-in-asp.net/</guid>
      <description>

&lt;p&gt;At my company, we recently experienced intermittent crashes/restarts on one of the ASP.Net applications
which I help to develop and administrate. While it took me several hours to get to the bottom of the
problem, I was finally able to solve it using the following sequence of steps.&lt;/p&gt;

&lt;h2 id=&#34;step-1-is-there-a-problem:4570aa6c407ebd55f00c68a95e531ccf&#34;&gt;Step 1: Is there a problem?&lt;/h2&gt;

&lt;p&gt;At my company, we are using &lt;a href=&#34;http://newrelic.com&#34;&gt;NewRelic&lt;/a&gt; to monitor our production ASP.Net
server. Both in NewRelic and in usage of our application, we were noticing that the program would
stop responding for a minute or two at a time, but would then start responding again shortly
thereafter.  When checking the server CPU and memory levels, we did not notice any persistent
issues.  When checking the event log, we found cryptic errors saying&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;Faulting application w3wp.exe, version 7.0.6002.18005, time stamp 0x49e023cf, 
faulting module kernel32.dll, version 6.0.6002.19034, time stamp 0x52f2ecb1, 
exception code 0xe053534f, fault offset 0x0001e743, process id 0x%9, 
application start time 0x%10.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A Google search of &lt;code&gt;0xe053534f&lt;/code&gt; led to &lt;a href=&#34;http://blog.fogcreek.com/production-debugging-a-story-about-exception-code-0xe053534f/&#34;&gt;blog posts online&lt;/a&gt;
indicating that the problem was a &lt;code&gt;StackOverflow&lt;/code&gt; exception.  This post also indicated that we
should be seeing two entries in the event log &amp;ndash; the error and an entry from Windows Error Reporting
including the link to a folder with additional details.  This phantom second entry was not found
(perhaps because the server is not configured to send these reports to Microsoft?).  However, the
post did indicate that the error reporting data data was in the directory
&lt;code&gt;C:\ProgramData\Microsoft\Windows\WER\ReportQueue\&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;step-2-windows-error-reporting:4570aa6c407ebd55f00c68a95e531ccf&#34;&gt;Step 2: Windows Error Reporting&lt;/h2&gt;

&lt;p&gt;It turns out that you can view the Windows Error Reports in the Windows user interface.  Simply
search the Start Menu for &lt;code&gt;Problem Reports and Solutions&lt;/code&gt;.  In the Tasks along the left, select
&lt;code&gt;View problem history&lt;/code&gt;.  Here you can view a list of recent reports including the offending
application and the time of the report which you can correlate with your event log entry.  While
you might be able to get all the information you need from the user interface, I found it easiest
to correlate the timestamps in the interface with the folders in &lt;code&gt;C:\ProgramData\Microsoft\Windows\WER\ReportQueue\&lt;/code&gt;.
Examining the folders, I found files of types &lt;code&gt;*.mdmp&lt;/code&gt; and &lt;code&gt;*.hdmp&lt;/code&gt; which turn out to be mini
and full memory dumps respectively.&lt;/p&gt;

&lt;h2 id=&#34;step-3-viewing-memory-dumps:4570aa6c407ebd55f00c68a95e531ccf&#34;&gt;Step 3: Viewing Memory Dumps&lt;/h2&gt;

&lt;p&gt;While there are likely many applications for analyzing memory dumps, it appears that the
quintessential one is &lt;a href=&#34;https://msdn.microsoft.com/en-us/windows/hardware/hh852365.aspx&#34;&gt;WinDbg&lt;/a&gt;
available from Microsoft as part of the Windows Driver Kit (or as a separate download).  To begin,
you need to install the correct version of WinDbg for you operating system.  Once that is complete,
it is time to set up your environment.  &lt;a href=&#34;http://www.diaryofaninja.com/blog/2014/03/20/investigating-aspnet-memory-dumps-for-idiots-like-me&#34;&gt;Diary of a Ninja&lt;/a&gt;
has a good write-up on this.  Otherwise, the general steps are&lt;/p&gt;

&lt;h3 id=&#34;directories:4570aa6c407ebd55f00c68a95e531ccf&#34;&gt;Directories&lt;/h3&gt;

&lt;p&gt;Create a directory structure on your computer that looks something like&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C:\Debug
C:\Debug\MemoryDumps
C:\Debug\Symbols
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;environmental-variables:4570aa6c407ebd55f00c68a95e531ccf&#34;&gt;Environmental Variables&lt;/h3&gt;

&lt;p&gt;Create an environmental variable named &lt;code&gt;_NT_SYMBOL_PATH&lt;/code&gt; and set it&amp;rsquo;s value to&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;SRV*C:\Debug\Symbols*http://msdl.microsoft.com/download/symbols;C:\Debug\MemoryDumps
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://www.diaryofaninja.com/asset/blogimages/e4a88f66-c949-4c53-8c38-f1d10d0f3fe4_image9.png&#34; alt=&#34;Environmental Variable Dialog&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Note: I am assuming you are using the directories outlined above.  Otherwise, the general structure
of the command is&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;SRV*[LOCATION TO STORE CACHE]*[PATH TO SYMBOLS SEPARATED BY SEMI-COLONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;copying-files:4570aa6c407ebd55f00c68a95e531ccf&#34;&gt;Copying files&lt;/h3&gt;

&lt;p&gt;Copy the following file&amp;rsquo;s to your &lt;code&gt;C:\Debug\MemoryDumps&lt;/code&gt; folder:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your server&amp;rsquo;s &lt;code&gt;SOS.dll&lt;/code&gt;. This is available at the path
&lt;code&gt;C:\Windows\Microsoft.NET\[Framework or Framework64]\[Framework Version #]\SOS.dll&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Your application&amp;rsquo;s PDB files.&lt;/li&gt;
&lt;li&gt;Your memory dump.  (Remember the &lt;code&gt;*.hdmp&lt;/code&gt; file in the Windows Error Reporting directory from
earlier?)&lt;/li&gt;
&lt;li&gt;For .Net 2-3.5 Analysis:

&lt;ul&gt;
&lt;li&gt;Your server’s &lt;code&gt;mscordacwks.dll&lt;/code&gt;. This is available at the path
&lt;code&gt;C:\Windows\Microsoft.NET\[Framework or Framework64]\[Framework Version #]\mscordacwks.dll&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;For .Net 4+ Analysis:

&lt;ul&gt;
&lt;li&gt;Your server’s &lt;code&gt;msdacwrks.dll&lt;/code&gt;. This is available at the path
&lt;code&gt;C:\Windows\Microsoft.NET\[Framework or Framework64]\[Framework Version #]\msdacwrks.dll&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Your server’s &lt;code&gt;clr.dll&lt;/code&gt;. This is available at the path
&lt;code&gt;C:\Windows\Microsoft.NET\[Framework or Framework64]\[Framework Version #]\clr.dll&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are having trouble getting the correct dll versions for your server, the
&lt;a href=&#34;https://chentiangemalc.wordpress.com/2014/04/16/obtaining-correct-mscordacwks-dll-for-net-windbging/&#34;&gt;chentiangemalc blog&lt;/a&gt;
might be useful.  Also, during analysis, you might receive an error message about not being able to
find the correct version of a particular dll.  In the error message it might give you a name of the
dll with a version to use. In this case, you can create a copy of the dll (assuming it is of the
correct version) in the &lt;code&gt;MemoryDumps&lt;/code&gt; folder to circumvent the problem.  For example, I ended up
having to rename &lt;code&gt;msdacwrks.dll&lt;/code&gt; to &lt;code&gt;mscordacwks_x86_x86_2.0.50727.4253.dll&lt;/code&gt; for my environment.&lt;/p&gt;

&lt;h2 id=&#34;step-4-dealing-with-net-3-5:4570aa6c407ebd55f00c68a95e531ccf&#34;&gt;Step 4: Dealing with .Net 3.5&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://www.diaryofaninja.com/asset/blogimages/8d861f59-0981-4103-b1aa-b535d05af0ae_image_thumb_7.png&#34; alt=&#34;Open Crash Dump in WinDbg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now you have launched WinDbg and opened the crash dump (File &amp;gt; Open Crash Dump).
&lt;a href=&#34;http://www.diaryofaninja.com/blog/2014/03/20/investigating-aspnet-memory-dumps-for-idiots-like-me&#34;&gt;Diary of a Ninja&lt;/a&gt;
would have you run the commands&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;.symfix
.reload
.loadby sos clr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/00/25/31/metablogapi/4571.image_thumb_7B262BEE.png&#34; alt=&#34;Run Commands in WinDbg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;However, these commands are specific to .Net 4+.  Unfortunately, I was debugging a .Net 3.5
application. For .Net 3.5 (the 2.0 version of the CLR), &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows/hardware/ff540665.aspx&#34;&gt;Microsoft&lt;/a&gt;
would have me replace the last command with&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;.loadby sos mscorwks
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, that still didn&amp;rsquo;t work for me.  What did
work was following the &lt;a href=&#34;https://blogs.msdn.microsoft.com/kaevans/2011/04/11/intro-to-windbg-for-net-developers/&#34;&gt;advice from Kirk Evans&lt;/a&gt;
to download the &lt;a href=&#34;https://blogs.msdn.microsoft.com/tom/2010/03/29/new-debugger-extension-for-net-psscor2-released/&#34;&gt;Psscor2&lt;/a&gt;
extension for WinDbg from Microsoft.  Per Kirk&amp;rsquo;s directions, I unzipped the download to&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nohighlight&#34;&gt;C:\Debug\psscor2
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-5-analyzing-the-dump:4570aa6c407ebd55f00c68a95e531ccf&#34;&gt;Step 5: Analyzing the Dump&lt;/h2&gt;

&lt;p&gt;Putting this all together, analyzing the dump was now possible by&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Lanching WinDbg and opening the dump (File &amp;gt; Open Crash Dump).&lt;/li&gt;
&lt;li&gt;Loading &lt;code&gt;psscor2&lt;/code&gt; using the command &lt;code&gt;.load C:\Debug\psscor2\x86\psscor2.dll&lt;/code&gt; since I needed the
32-bit version&lt;/li&gt;
&lt;li&gt;Analyzing the dump with the command &lt;code&gt;!analyze -v&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This was enough to give me a useful stack trace from which I could identify the problem and fix the
bug&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>